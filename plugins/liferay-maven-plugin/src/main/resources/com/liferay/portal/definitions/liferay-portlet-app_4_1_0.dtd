<!--
<!DOCTYPE liferay-portlet-app PUBLIC
	"-//Liferay//DTD Portlet Application 4.1.0//EN"
	"http://www.liferay.com/dtd/liferay-portlet-app_4_1_0.dtd">
-->

<!--
The liferay-portlet-app element is the root of the deployment descriptor for
a Liferay portlet application.
-->
<!ELEMENT liferay-portlet-app (portlet*, role-mapper*, custom-user-attribute*)>

<!--
The portlet element contains the declarative data of a portlet.
-->
<!ELEMENT portlet (portlet-name, struts-path?, configuration-path?,
indexer-class?, scheduler-class?, portlet-url-class?,
friendly-url-plugin-class?, preferences-company-wide?,
preferences-unique-per-layout?, preferences-owned-by-group?,
use-default-template?, show-portlet-access-denied?, show-portlet-inactive?,
restore-current-view?, maximize-edit?, maximize-help?, maximize-print?,
layout-cacheable?, instanceable?, private-request-attributes?, system?, active?,
include?)>

<!--
The portlet-name element contains the unique name of the portlet. This name must
match the portlet-name specified in portlet.xml.
-->
<!ELEMENT portlet-name (#PCDATA)>

<!--
Supppose the struts-path value is "mail". This tells the portal that all
requests with the path mail/* are considered part of this portlet's scope. Users
who request paths that match mail/* will only be granted access if they also
have access to this portlet. This is true for both portlet requests and regular
servlet requests.
-->
<!ELEMENT struts-path (#PCDATA)>

<!--
The configuration-path value is a Struts path that allows users to configure the
portlet at runtime. The Struts path must reference a class that extends
com.liferay.portal.struts.PortletAction.

See:

http://docs.liferay.com/portal/4.1/javadocs/portal-ejb/com/liferay/portlet/messageboards/action/EditConfigurationAction.html
http://www.opensymphony.com/quartz
-->
<!ELEMENT configuration-path (#PCDATA)>

<!--
The indexer-class value must be a class that implements
com.liferay.util.lucene.Indexer and is called to create or update a search index
for the portlet.

See:

http://docs.liferay.com/portal/4.1/javadocs/util-java/com/liferay/util/lucene/Indexer.html
http://docs.liferay.com/portal/4.1/javadocs/portal-ejb/com/liferay/portlet/messageboards/util/Indexer.html
http://lucene.apache.org
-->
<!ELEMENT indexer-class (#PCDATA)>

<!--
The scheduler-class value must be a class that implements
com.liferay.portal.job.Scheduler and is called to schedule Quartz jobs for this
portlet.

See:

http://docs.liferay.com/portal/4.1/javadocs/portal-ejb/com/liferay/portal/job/Scheduler.html
http://docs.liferay.com/portal/4.1/javadocs/portal-ejb/com/liferay/portlet/calendar/job/Scheduler.html
http://www.opensymphony.com/quartz
-->
<!ELEMENT scheduler-class (#PCDATA)>

<!--
The portlet-url-class value must be a class that extends
com.liferay.portlet.PortletURLImplWrapper. Set this class to override the
default portlet URL implementation.

See:

http://docs.liferay.com/portal/4.1/javadocs/portal-ejb/com/liferay/portal/struts/StrutsActionPortletURL.html
-->
<!ELEMENT portlet-url-class (#PCDATA)>

<!--
The portlet-url-class value must be a class that implements
com.liferay.portal.servlet.FriendlyURLPortletPlugin. Use this if content inside
a portlet needs to have a friendly URL. See the Message Boards portlet for an
example of its uses.

See:

http://docs.liferay.com/portal/4.1/javadocs/portal-ejb/com/liferay/portlet/enterpriseadmin/EnterpriseAdminPortletURL.html
-->
<!ELEMENT friendly-url-plugin-class (#PCDATA)>

<!--
Set the preferences-company-wide value to true if the preferences for the
portlet are across the entire company. Setting this value to true means
the value for preferences-unique-per-layout and preferences-owned-by-group are
not used. The default value is false.

For example, an administrator could set the preferences to an Announcements
portlet that would save a message in the portlet's preferences. This message
would then be used across all pages for that company. The portlet must not be
instanceable because instanceable portlets have uniquely generated portlet ids.

The default behavior of the bundled Announcements portlet sets the instanceable
value to true so that normal users cannot create company wide messages. A future
release would include permissions for the edit mode versus the view mode which
would allow an administrator to set the message while users would just view the
message.
-->
<!ELEMENT preferences-company-wide (#PCDATA)>

<!--
Set the preferences-unique-per-layout value to true if the preferences for the
portlet are unique across all pages. If set to false, the preferences for the
portlet are shared across all pages. The default value is true.

The preferences-unique-per-layout element is used in combination with the
preferences-owned-by-group element. See the comments for the
preferences-owned-by-group element for more information.
-->
<!ELEMENT preferences-unique-per-layout (#PCDATA)>

<!--
Set the preferences-owned-by-group value to true if the preferences for the
portlet are owned by the group when the portlet is shown in a group page. If
set to false, the preferences are owned by the user at all times. The default
value is true.

Suppose the Stocks portlet has preferences-unique-per-layout set to true and
preferences-owned-by-group set to false. Users can set a different list of
stocks for every personal page. Users can set a different list of stocks for
every community page.

Suppose the Stocks portlet has preferences-unique-per-layout set to false and
preferences-owned-by-group set to false. Users can set one list of stocks to be
shared across all personal pages. Users can set one list of stocks to be shared
across a community's set of pages.

Suppose the Stocks portlet has preferences-unique-per-layout set to true and
preferences-owned-by-group set to true. Users can set a different list of stocks
for every personal page. Administrators set the portlet preferences for users in
a community page. Administrators can set a different list of stocks for every
community page that are then shared by all users within a community.

Suppose the Stocks portlet has preferences-unique-per-layout set to false and
preferences-owned-by-group set to true. Users can set one list of stocks to be
shared across all personal pages. Administrators set the portlet preferences for
users in a community page. Administrators can set one list of stocks to be
shared by all users across a community's set of pages.
-->
<!ELEMENT preferences-owned-by-group (#PCDATA)>

<!--
Set the use-default-template value to true if the portlet uses the default
template to decorate and wrap content. Setting this to false allows the
developer to own and maintain the portlet's entire outputted content. The
default value is true.

The most common use of this is if you want the portlet to look different from
the other portlets or if you want the portlet to not have borders around the
outputted content.
-->
<!ELEMENT use-default-template (#PCDATA)>

<!--
Set the show-portlet-access-denied value to true if users are shown the portlet
with an access denied message if they do not have access to the portlet. If set
to false, users are never shown the portlet if they do not have access to the
portlet. The default value is set in portal.properties.

See:

http://www.liferay.com/page/guest/documentation/development/properties
-->
<!ELEMENT show-portlet-access-denied (#PCDATA)>

<!--
Set the show-portlet-inactive value to true if users are shown the portlet
with an inactive message if the portlet is inactive. If set to false, users are
never shown the portlet if the portlet is inactive. The default value is set in
portal.properties.

http://www.liferay.com/page/guest/documentation/development/properties
-->
<!ELEMENT show-portlet-inactive (#PCDATA)>

<!--
Set the restore-current-view value to true if the portlet restores to the
current view when toggling between maximized and normal states. If set to false,
the portlet will reset the current view when toggling between maximized and
normal states. The default value is true.
-->
<!ELEMENT restore-current-view (#PCDATA)>

<!--
Set the maximize-edit value to true if the portlet goes into the maximized state
when the user goes into the edit mode. This only affects the default portal
icons and not what may be programmatically set by the portlet developer.
The default value is false.
-->
<!ELEMENT maximize-edit (#PCDATA)>

<!--
Set the maximize-help value to true if the portlet goes into the maximized state
when the user goes into the edit mode. This only affects the default portal
icons and not what may be programmatically set by the portlet developer.
The default value is false.
-->
<!ELEMENT maximize-help (#PCDATA)>

<!--
Set the maximize-print value to true if the portlet goes into the maximized state
when the user goes into the edit mode. This only affects the default portal
icons and not what may be programmatically set by the portlet developer.
The default value is false.
-->
<!ELEMENT maximize-print (#PCDATA)>

<!--
Set the layout-cacheable flag to true if the data contained in this portlet can
will never change unless the layout or Journal portlet entry is changed.
-->
<!ELEMENT layout-cacheable (#PCDATA)>

<!--
Set the instanceable value to true if the portlet can appear multiple times on a
page. If set to false, the portlet can only appear once on a page. The default
value is false.
-->
<!ELEMENT instanceable (#PCDATA)>

<!--
Set the private-request-attributes value to true if the portlet does not share
request attributes with any other portlet. The default value is true.
-->
<!ELEMENT private-request-attributes (#PCDATA)>

<!--
Set the system value to true if the portlet is a system portlet that a user
cannot manually add to their page. The default value is false.
-->
<!ELEMENT system (#PCDATA)>

<!--
Set the active value to true if the portlet is active and available to users.
If set to false, the portlet will not be active or available to users. The
default value is true.

This value can be changed at runtime via the Admin portlet.
-->
<!ELEMENT active (#PCDATA)>

<!--
Set the include value to true to if the portlet is available to the portal. If
set to false, the portlet is not available to the portal. The default value is
true.

Portlets that are not included as part of the portal are never available to the
user to be made active or inactive. As far the user knows, the portlets do not
even exist in the system. This allows the Liferay developers to bundle a lot of
portlets in one core package, and yet allow custom deployments to turn on or off
individual portlets or sets of portlets. This follows the Siebel and Microsoft
model of bundling everything in one core package, but using XML configuration or
registry settings to turn on and off features or sets of features.

We do not recommend that custom deployers modify the core source by removing
specific portlets because this prevents an easy upgrade process in the future.
The best way to turn on and off portlets is to set the include element. The
advantage of this way of doing things is that it becomes very easy to deploy
Liferay. All features are available in one package. The disadvantage is that by
not utilizing all of the portlets, you are wasting disk space and may even take
a small but static memory footprint. However, we feel that the extra disk space
and memory usage is a cheap price to pay in order to provide an easy
installation and upgrade path.
-->
<!ELEMENT include (#PCDATA)>

<!--
The role-mapper contains two names specified by role-name and role-link. The
role-name value must be a role specified in portlet.xml. The role-link value
must be the name of a Liferay role that exists in the database. The role-mapper
element pairs up these two values to map roles from portlet.xml to roles in
the Liferay database.

This is needed because Liferay roles may contain spaces whereas roles in
portlet.xml cannot contain spaces. This also adds extra flexibility where the
portlet vendor does not need to have any knowledge about Liferay's roles.
-->
<!ELEMENT role-mapper (role-name, role-link)>

<!--
See the comments in role-mapper element.
-->
<!ELEMENT role-name (#PCDATA)>

<!--
See the comments in role-mapper element.
-->
<!ELEMENT role-link (#PCDATA)>

<!--
The custom-user-attribute contains a list of names that are retrieved using a
custom class that extends com.liferay.portlet.CustomUserAttributes.

Download the sample hot deployable portlet WAR named test.war. Look for the
class com.liferay.portlet.teststruts.TestStrutsUserAttributes to see how it
associates the custom user attribute "user.name.test" with the value
"Test Name". This class could be modified to read custom user attributes from
another datasource that may be a database, a LDAP server, or a web service.

See:

http://www.liferay.com/page/guest/documentation/development/hot_deploy
-->
<!ELEMENT custom-user-attribute (name+, custom-class)>

<!--
See the comments in custom-user-attribute element.
-->
<!ELEMENT name (#PCDATA)>

<!--
See the comments in custom-user-attribute element.
-->
<!ELEMENT custom-class (#PCDATA)>